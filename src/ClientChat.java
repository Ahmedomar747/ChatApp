
import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.Socket;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ahmedomar
 */
public class ClientChat extends javax.swing.JFrame {

    /**
     * Creates new form ClientChat
     */
    public ClientChat() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        msgarea = new javax.swing.JTextArea();
        msgs = new javax.swing.JLabel();
        PeerText = new javax.swing.JTextField();
        msgText = new javax.swing.JTextField();
        Sendbtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        jLabel1.setText("jLabel1");

        jPanel2.setForeground(new java.awt.Color(51, 153, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 394, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 209, Short.MAX_VALUE)
        );

        msgarea.setColumns(20);
        msgarea.setRows(5);
        jScrollPane1.setViewportView(msgarea);

        msgs.setForeground(new java.awt.Color(0, 50, 155));
        msgs.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        PeerText.setText("Name");
        PeerText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PeerTextActionPerformed(evt);
            }
        });

        msgText.setText("Message");
        msgText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msgTextActionPerformed(evt);
            }
        });

        Sendbtn.setText("Send");
        Sendbtn.setToolTipText("");
        Sendbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendbtnActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(PeerText, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(msgText, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Sendbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Sendbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(msgText, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PeerText, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void msgTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msgTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_msgTextActionPerformed

    private void PeerTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PeerTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PeerTextActionPerformed

    private void SendbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendbtnActionPerformed
        // TODO add your handling code here:
        try{
        String msg = msgText.getText();
        String peer = PeerText.getText();
        String all = peer+"#"+msg;
        dos.writeUTF(all);
        }catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_SendbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientChat().setVisible(true);
            }
        });
        try{
        int port = 0;
        in = 
                new BufferedReader(new InputStreamReader(System.in));
        System.out.println("Select Server A or B.");
        while(true) {
        	String intext = in.readLine();
        if(intext.equals("A")) {
        	port = 4444;
        	System.out.println("Connected to Server A");
        	break;
        }
        else{
        	if(intext.equals("B")){
        		port = 6789;
        		System.out.println("Connected to Server B");
        		break;
        }
        else {
        	System.out.println("Error invalid Server! try again");}
        }
        }
        
       clientSocket = new Socket("127.0.0.1", port);
       dis = new DataInputStream(clientSocket.getInputStream()); 
       dos = new DataOutputStream(clientSocket.getOutputStream()); 
        
        System.out.println("Enter your name.");
        String name = in.readLine();
        dos.writeUTF(name);
        }catch(Exception e){System.out.println(e);}
        Thread trread = new Thread(new Runnable() {
        	@Override
    		public void run() {
    			while(true) {
    				try {
    					if(dis.readUTF() != null){
    					String msg = dis.readUTF();
                                       read(msg);
                                       msgarea.append("\n" + msg);
                                                }
    				} catch (IOException e) {
    					e.printStackTrace();break;
    				}
    			}
    			try {
					clientSocket.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
    		}
        	
        });
        Thread trwrite = new Thread(new Runnable() {
        	@Override
    		public void run() {
    			while(true) {			
    				try {
    					String da = in.readLine();
    						dos.writeUTF(da);
    					
    					
    					}
    					
    				 catch (Exception e) {
    					e.printStackTrace();break;
    				}
    			}
    			try {
					clientSocket.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
    		
    		}
        });
        trwrite.start();
        trread.start();
        
    }
      public static void write(DataOutputStream  dos,String x) {
		try {
			dos.writeUTF(x);
		} catch (IOException e) {
			e.printStackTrace();
		}
}
public static void read(String x) {
		System.out.println(x);
}
 public static BufferedReader in;
public static DataInputStream dis;
public static DataOutputStream dos;
public static Socket clientSocket;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JTextField PeerText;
    private static javax.swing.JButton Sendbtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private static javax.swing.JTextField msgText;
    private static javax.swing.JTextArea msgarea;
    private static javax.swing.JLabel msgs;
    // End of variables declaration//GEN-END:variables
}
